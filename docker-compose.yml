version: '3'
volumes:
  ui_modules:
networks:
  app_network:
services:
  traefik:
    image: "traefik:2.0"
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8080"
    ports:
      - "8080:8080"
    depends_on:
      - app
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app_network
  app:
    restart: always
    build:
      context: .
    working_dir: /home/app
    command: bash -c "npm i&&npm run start-dev"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ui.rule=Host(`${APP_DOMAIN:-app.localhost}`)"
      - "traefik.http.routers.ui.entrypoints=web"
      - "traefik.http.routers.ui.service=ui-http-service"
      - "traefik.http.services.ui-http-service.loadbalancer.server.port=8080"
    environment:
      - node-options="--max-old-space-size=4096"
      - MONGO_URI=mongodb://admin:admin@mongodb:27017
      - REDIS_URI=redis://redis:6379
      - APP_MODE=${APP_MODE:-dev}
      - APP_DOMAIN=${APP_DOMAIN:-app.localhost}
      - ROOT_DOMAIN=${APP_DOMAIN:-app.localhost}
      - CHOKIDAR_USEPOLLING=true
    links:
      - mongodb
      - redis
    depends_on:
      - mongodb
      - redis
    expose:
      - "8080"
    ports:
      - "9229:9229"
    volumes:
      - .:/home/app
      - ui_modules:/home/app/node_modules
    networks:
      - app_network
  mongodb:
    image: mongo
    restart: always
    environment:
      - MONGO_DATA_DIR=/data/mongodb
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - ./data/mongodb:/data
    expose:
      - 27017
    networks:
      - app_network
  redis:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    restart: always
    expose:
      - 6379
    networks:
      - app_network
    volumes:
      - ./data/redis-data:/data